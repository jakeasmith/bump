#! /usr/bin/php
<?php

if (empty($argv[1]) || !in_array($argv[1], ['major', 'minor', 'patch'])) {
    echo 'Please supply a bump type: major, minor, patch.' . PHP_EOL;
    exit;
}

$bump = $argv[1];

$comparison = new \Bump\Compare(function ($tag) {
    return new \Bump\Version\SemVer($tag);
});

$current_tag = $comparison->getLatestTag(explode(PHP_EOL, shell_exec('git tag')));
$next_tag = $current_tag->bump($bump);


$cmd = 'git shortlog ' . $current_tag->formatTag() . '..';
echo PHP_EOL . 'git shortlog ' . $current_tag->formatTag() . '..' . PHP_EOL;
passthru($cmd);

$tagit = readline('Do you want to create and push a new tag (' . $next_tag->formatTag() . ') with the above changes? (y/n):');
if (strtolower($tagit) !== 'y') {
    echo 'It\'s cool. I understand.' . PHP_EOL;
    exit;
}

passthru('git tag ' . $next_tag->formatTag());
passthru('git push origin ' . $next_tag->formatTag());
echo $bumped_version . ' has been tagged.' . PHP_EOL;
